Zależności w bazie danych:
1. Region X nie może być usunięty póki jest przypisany do istniejącego Building Y
2. Building X nie może być usunięty póki jest przypisany do istniejącego Event lub Stand Y
3. Category X, Reservation X lub User X nie może być usunięty póki jest przypisany do istniejącego Stand Y
4. Event lub Stand nie ma żadnych zależności, więc może być usunięty kiedykolwiek.




Jak zrobić migrację manualnie lokalnie?
1. cd \nowatorskiProjektGrupowy\backend
2. alembic revision --autogenerate -m "Initial migration"
3. alembic upgrade head



Jak odpalic docker-compose?:
0,1. Upewnij sie ze masz poprawnie zainstalowany i włączony docker desktop
[Pierwszy terminal vsc (powershell):]
1. cd <folder_nadrzedny_ponad_backend>
2. docker-compose up --build

[Drugi terminal vsc (powershell):]
3. docker ps -a
4. docker exec -it <id_kontenera (nazwa powinna byc: nowatorskiprojektgrupowy-backend)> bash
5. cd /code/backend
6. alembic revision --autogenerate -m "Initial migration"
7. alembic upgrade head
7,1. Od teraz baza danych i api będą działać za każdym razem po odpaleniu 'docker-compose up'. Aby dodać/edytować dane,
skorzystaj z pliku 'insomnia_requests' znajdującego się w 'backend/source/utils/requests_dump/' i załaduj go w insomnii.
Nie trzeba robić kolejnych migracji przy odpalaniu docker compose. Przy dodawaniu rzeczy do bazy, pamiętaj o zależnościach,
tzn. Nie możesz dodać building bez dodanego region, etc.
7,2. Jesli powyzsze nie zadziala, uzyj 'crtl + c' na pierwszym terminalu i wpisz 'docker-compose down'. Teraz powtórz czynności, 
tylko zamiast odpalać drugi terminal w vsc, włącz terminal powershell na windowsie (komendy nadal te same).



Do poprawienia w przyszlosci:
1. Optymalizacja alembica (auto migracje, kod env.py)
2. Zmiana nazw kolumn w Stand i Event (2x eventBuildingId)
3. Usunięcie zahardkodowanych post requestow
4. Naprawa walidacji datetime przez pydantic dla event_schema i event_model
5. zmienić nazwy id z encji na np. building_id
6. zmienić nazwy tabel z bazy na snake_case z camelCase
7. usunąć secrety z docker compose i dać je do .env
8. dodać health check do docker compose
9. ujednolicic styl pisania klas i funkcji (sprawdzić pep8)
10. dodanie typow w parametrach gdzie nie ma (np. database_queries.py)



Jak odpalic backend bez docker compose?
1. zanim zaczniesz wchodzisz w psql i tworzysz baze danych o nazwie 'eventappdb', jak ci sie uda to wyskoczy ci komunikat 'CREATE DATABASE'
2. robisz migracje manualnie lokalnie jak jest napisane w backend/source/notes
3. w backend/source/utils/requests_dump masz insomnia_2025 costam costam
4. logujesz sie do insomnii
5. na panelu glownym klikasz import
6. wrzucasz plik
7. po odpaleniu api wchodzisz w folder health check, klikasz send, dziala = 👍, nie dziala to nie odpalilo
sie api
8. jak api dziala rejestrujesz sie w bazie danych poprzez body na endpoincie security requests/register:
{
    "login": "user",
    "password": "abc123",
    "isAdmin": false,
    "isLocalUser": false
}

9. potem logujesz sie poprzez body na endpoincie security requests/register:
{
    "login": "user",
    "password": "abc123"
}

10.jak uda ci sie zalogowac dostaniesz token JWT ktopry wklejasz w local > collection env > ołówek w kwadracie > token