"""DbChanges

Revision ID: 8480e2511e52
Revises: f8e9ced35ef8
Create Date: 2025-05-18 13:55:44.144919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8480e2511e52'
down_revision: Union[str, None] = 'f8e9ced35ef8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('categoryId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('categoryId')
    )
    op.create_table('region',
    sa.Column('regionId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('regionId')
    )
    op.create_table('reservation',
    sa.Column('reservationId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('reservationId')
    )
    op.create_table('user',
    sa.Column('userId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('displayName', sa.String(length=30), nullable=False),
    sa.Column('isAdmin', sa.Boolean(), nullable=False),
    sa.Column('isLocalUser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('userId')
    )
    op.create_table('building',
    sa.Column('buildingId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('regionId', sa.Integer(), nullable=False),
    sa.Column('hasOpenStands', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['regionId'], ['region.regionId'], ),
    sa.PrimaryKeyConstraint('buildingId')
    )
    op.create_table('event',
    sa.Column('eventId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('eventDate', sa.DateTime(), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('buildingId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['buildingId'], ['building.buildingId'], ),
    sa.PrimaryKeyConstraint('eventId')
    )
    op.create_table('stand',
    sa.Column('standId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('standNumber', sa.Integer(), nullable=False),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.Column('reservationPrice', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('buildingId', sa.Integer(), nullable=False),
    sa.Column('reservationId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['buildingId'], ['building.buildingId'], ),
    sa.ForeignKeyConstraint(['categoryId'], ['category.categoryId'], ),
    sa.ForeignKeyConstraint(['reservationId'], ['reservation.reservationId'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ),
    sa.PrimaryKeyConstraint('standId')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stand')
    op.drop_table('event')
    op.drop_table('building')
    op.drop_table('user')
    op.drop_table('reservation')
    op.drop_table('region')
    op.drop_table('category')
    # ### end Alembic commands ###
